/*

Challenge:

Given a two-dimensional array of integers, return the flattened version of the array with all the integers in the sorted (ascending) order.

Example:

Given [[3, 2, 1], [4, 6, 5], [], [9, 7, 8]], your function should return [1, 2, 3, 4, 5, 6, 7, 8, 9].
*/




function flattenAndSort(array) {
  let m =[]
  for( let num in array){
    for(let finalBreak in array[num]){
      m.push(array[num][finalBreak])
    }
  }
  return m.sort((a,b)=>a-b);
}


//test 

describe("Example test cases", function() {
  Test.assertSimilar(flattenAndSort([]), []);
  Test.assertSimilar(flattenAndSort([[], [1]]), [1]);
  Test.assertSimilar(flattenAndSort([[3, 2, 1], [7, 9, 8], [6, 4, 5]]), [1, 2, 3, 4, 5, 6, 7, 8, 9]);
  Test.assertSimilar(flattenAndSort([[1, 3, 5], [100], [2, 4, 6]]), [1, 2, 3, 4, 5, 6, 100]);
});
